<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<!-- template designed by Marco Von Ballmoos -->
			<title>Docs For Class InfModelF</title>
			<link rel="stylesheet" href="../media/stylesheet.css" />
			<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'/>
		</head>
		<body>
			<div class="page-body">			
<h2 class="class-name">Class InfModelF</h2>

<a name="sec-description"></a>
<div class="info-box">
	<div class="info-box-title">Description</div>
	<div class="nav-bar">
					<span class="disabled">Description</span> |
													<a href="#sec-vars">Vars</a>
						|											<a href="#sec-method-summary">Methods</a> (<a href="#sec-methods">details</a>)
						
					</div>
	<div class="info-box-body">
        		<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">A InfModelF extends the InfModel Class, with a forward chaining algorithm.</p>
<p class="description"><p>If a new statement is added, it is enferd at  once and all the entailed statements are added too.  When adding or removing a statement, that produced a new inference rule,  all entailed statements are discarded and the whole base model is infered  again.  The InfModelF is safe for loops in Ontologies, that would cause infinite loops.</p></p>
	<ul class="tags">
				<li><span class="field">author:</span> Daniel Westphal &lt;<a href="mailto:mail">at d-westphal dot de mail at d-westphal dot de</a>&gt;</li>
				<li><span class="field">version:</span> $Id$</li>
				<li><span class="field">access:</span> public</li>
			</ul>
		<p class="notes">
			Located in <a class="field" href="_infModel---InfModelF.php.html">/infModel/InfModelF.php</a> (line <span class="field"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a23">23</a></span>)
		</p>
		
				
		<pre><a href="../utility/Object.html">Object</a>
   |
   --<a href="../model/Model.html">Model</a>
      |
      --<a href="../model/MemModel.html">MemModel</a>
         |
         --<a href="../infModel/InfModel.html">InfModel</a>
            |
            --InfModelF</pre>
	
			</div>
</div>




	<a name="sec-method-summary"></a>
	<div class="info-box">
		<div class="info-box-title">Method Summary</span></div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
																		<a href="#sec-vars">Vars</a>
				 
				|
						<span class="disabled">Methods</span> (<a href="#sec-methods">details</a>)
		</div>
		<div class="info-box-body">			
			<div class="method-summary">
																																																																																																						
				<div class="method-definition">
											<span class="method-result">InfModelF</span>
										<a href="#InfModelF" title="details" class="method-name">InfModelF</a>
											([<span class="var-type">string</span>&nbsp;<span class="var-name">$baseURI</span> = <span class="var-default">NULL</span>])
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#add" title="details" class="method-name">add</a>
											(<span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#addModel" title="details" class="method-name">addModel</a>
											(<span class="var-type"></span>&nbsp;<span class="var-name">&$model</span>, <span class="var-type">object Model</span>&nbsp;<span class="var-name">$model</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">boolean</span>
										<a href="#addWithoutDuplicates" title="details" class="method-name">addWithoutDuplicates</a>
											(<span class="var-type"></span>&nbsp;<span class="var-name">&$statement</span>, <span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">array</span>
										<a href="#entailStatement" title="details" class="method-name">entailStatement</a>
											(<span class="var-type"></span>&nbsp;<span class="var-name">&$statement</span>, <span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">object MemModel</span>
										<a href="#getBaseMemModel" title="details" class="method-name">getBaseMemModel</a>
										()
									</div>
														
				<div class="method-definition">
											<span class="method-result">object MemModel</span>
										<a href="#getMemModel" title="details" class="method-name">&amp;getMemModel</a>
										()
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#load" title="details" class="method-name">load</a>
											(<span class="var-type">string</span>&nbsp;<span class="var-name">$filename</span>, [<span class="var-type">string</span>&nbsp;<span class="var-name">$type</span> = <span class="var-default">NULL</span>])
									</div>
														
				<div class="method-definition">
											<span class="method-result">boolean</span>
										<a href="#remove" title="details" class="method-name">remove</a>
											(<span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#removeInfered" title="details" class="method-name">removeInfered</a>
										()
									</div>
														
				<div class="method-definition">
											<span class="method-result">string</span>
										<a href="#toString" title="details" class="method-name">toString</a>
										()
									</div>
											</div>
		</div>
	</div>		

	<a name="sec-vars"></a>
	<div class="info-box">
		<div class="info-box-title">Variables</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
										<a href="#sec-var-summary">Vars</a> (<span class="disabled">details</span>)
						
			
										| 
									<a href="#sec-method-summary">Methods</a> (<a href="#sec-methods">details</a>)
							
					</div>
		<div class="info-box-body">
			
							<h4>Inherited Variables</h4>
				<A NAME='inherited_vars'><!-- --></A>
									<p>Inherited from <span class="classname"><a href="../model/Model.html">Model</a></span></p>
					<blockquote>
													<span class="var-title">
								<span class="var-name"><a href="../model/Model.html#var$queryParser">Model::$queryParser</a></span><br>
							</span>
											</blockquote> 
										
		</div>
	</div>
	
	<a name="sec-methods"></a>
	<div class="info-box">
		<div class="info-box-title">Methods</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
															<a href="#sec-vars">Vars</a>
																	<a href="#sec-method-summary">Methods</a> (<span class="disabled">details</span>)
						
		</div>
		<div class="info-box-body">
			<A NAME='method_detail'></A>
<a name="methodInfModelF" id="InfModelF"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">Constructor InfModelF</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a52">52</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Constructor  You can supply a base_uri.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">InfModelF</span>
		<span class="method-name">
			InfModelF
		</span>
					([<span class="var-type">string</span>&nbsp;<span class="var-name">$baseURI</span> = <span class="var-default">NULL</span>])
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">string</span>
				<span class="var-name">$baseURI</span>			</li>
				</ul>
		
			
	</div>
<a name="methodadd" id="add"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">add</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a70">70</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Adds a new triple to the MemModel without checking if the statement  is already in the MemModel.</p>
<p class="description"><p>So if you want a duplicate free MemModel use the addWithoutDuplicates()  function (which is slower then add())  The statement is infered and all entailed statements are added.</p></p>
	<ul class="tags">
				<li><span class="field">throws:</span> PhpError</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			add
		</span>
					(<span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">object Statement</span>
				<span class="var-name">$statement</span>			</li>
				</ul>
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../infModel/InfModel.html#methodadd">InfModel::add()</a></dt>
						<dd>Adds a new triple to the Model without checking if the statement  is already in the Model.</dd>
					</dl>
			
	</div>
<a name="methodaddModel" id="addModel"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">addModel</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a395">395</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Adds another model to this MemModel.</p>
<p class="description"><p>Duplicate statements are not removed.  If you don't want duplicates, use unite().  If any statement of the model to be added to this model contains a blankNode  with an identifier already existing in this model, a new blankNode is generated.</p></p>
	<ul class="tags">
				<li><span class="field">throws:</span> phpErrpr</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			addModel
		</span>
					(<span class="var-type"></span>&nbsp;<span class="var-name">&$model</span>, <span class="var-type">object Model</span>&nbsp;<span class="var-name">$model</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">object Model</span>
				<span class="var-name">$model</span>			</li>
					<li>
				<span class="var-type"></span>
				<span class="var-name">&$model</span>			</li>
				</ul>
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../model/MemModel.html#methodaddModel">MemModel::addModel()</a></dt>
						<dd>Adds another model to this MemModel.</dd>
					</dl>
			
	</div>
<a name="methodaddWithoutDuplicates" id="addWithoutDuplicates"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">addWithoutDuplicates</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a107">107</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Checks if a new statement is already in the MemModel and adds  the statement, if it is not in the MemModel.</p>
<p class="description"><p>addWithoutDuplicates() is significantly slower then add().  Retruns TRUE if the statement is added.  FALSE otherwise.  The statement is infered and all entailed statements are added.</p></p>
	<ul class="tags">
				<li><span class="field">throws:</span> PhpError</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">boolean</span>
		<span class="method-name">
			addWithoutDuplicates
		</span>
					(<span class="var-type"></span>&nbsp;<span class="var-name">&$statement</span>, <span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">object Statement</span>
				<span class="var-name">$statement</span>			</li>
					<li>
				<span class="var-type"></span>
				<span class="var-name">&$statement</span>			</li>
				</ul>
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../model/MemModel.html#methodaddWithoutDuplicates">MemModel::addWithoutDuplicates()</a></dt>
						<dd>Checks if a new statement is already in the MemModel and adds the statement, if it is not in the MemModel.</dd>
					</dl>
			
	</div>
<a name="methodentailStatement" id="entailStatement"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">entailStatement</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a168">168</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Entails a statement by recursively using the _entailStatementRec  method.</p>
	<ul class="tags">
				<li><span class="field">return:</span> of statements</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">array</span>
		<span class="method-name">
			entailStatement
		</span>
					(<span class="var-type"></span>&nbsp;<span class="var-name">&$statement</span>, <span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">object Statement</span>
				<span class="var-name">$statement</span>			</li>
					<li>
				<span class="var-type"></span>
				<span class="var-name">&$statement</span>			</li>
				</ul>
		
			
	</div>
<a name="methodgetBaseMemModel" id="getBaseMemModel"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">getBaseMemModel</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a305">305</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Create a MemModel containing only the base triples  (without inferred statements) of the current InfModelF.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">object MemModel</span>
		<span class="method-name">
			getBaseMemModel
		</span>
				()
			</div>
	
		
			
	</div>
<a name="methodgetMemModel" id="getMemModel"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">getMemModel</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a287">287</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Create a MemModel containing all the triples (including inferred  statements) of the current InfModelF.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">object MemModel</span>
		<span class="method-name">
			&amp;getMemModel
		</span>
				()
			</div>
	
		
			
	</div>
<a name="methodload" id="load"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">load</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a258">258</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Load a model from a file containing RDF, N3 or N-Triples.</p>
<p class="description"><p>This function recognizes the suffix of the filename (.n3 or .rdf) and  calls a suitable parser, if no $type is given as string  (&quot;rdf&quot; &quot;n3&quot; &quot;nt&quot;);  If the model is not empty, the contents of the file is added to  this DbModel.</p><p>While loading the model, the inference entailing is disabled, but  new inference rules are added to increase performance.</p></p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			load
		</span>
					(<span class="var-type">string</span>&nbsp;<span class="var-name">$filename</span>, [<span class="var-type">string</span>&nbsp;<span class="var-name">$type</span> = <span class="var-default">NULL</span>])
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">string</span>
				<span class="var-name">$filename</span>			</li>
					<li>
				<span class="var-type">string</span>
				<span class="var-name">$type</span>			</li>
				</ul>
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../model/Model.html#methodload">Model::load()</a></dt>
						<dd>Load a model from a file containing RDF, N3, N-Triples or a xhtml document containing RDF.</dd>
					</dl>
			
	</div>
<a name="methodremove" id="remove"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">remove</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a330">330</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Removes the triple from the MemModel.</p>
<p class="description"><p>TRUE if the triple is removed.  FALSE otherwise.</p><p>Checks, if it touches any statements, that added inference rules  to the model</p></p>
	<ul class="tags">
				<li><span class="field">throws:</span> PhpError</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">boolean</span>
		<span class="method-name">
			remove
		</span>
					(<span class="var-type">object Statement</span>&nbsp;<span class="var-name">$statement</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">object Statement</span>
				<span class="var-name">$statement</span>			</li>
				</ul>
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../model/MemModel.html#methodremove">MemModel::remove()</a></dt>
						<dd>Removes the triple from the MemModel.</dd>
					</dl>
			
	</div>
<a name="methodremoveInfered" id="removeInfered"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">removeInfered</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a230">230</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Removes all infered statements from the model but keeps the  infernece rules.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			removeInfered
		</span>
				()
			</div>
	
		
			
	</div>
<a name="methodtoString" id="toString"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">toString</span> (line <span class="line-number"><a href="../__filesource/fsource_infModel__infModelInfModelF.php.html#a275">275</a></span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Short Dump of the InfModelF.</p>
	<ul class="tags">
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">string</span>
		<span class="method-name">
			toString
		</span>
				()
			</div>
	
		
			<hr class="separator" />
		<div class="notes">Redefinition of:</div>
		<dl>
			<dt><a href="../model/MemModel.html#methodtoString">MemModel::toString()</a></dt>
						<dd>Short Dump of the MemModel.</dd>
					</dl>
			
	</div>
							<h4>Inherited Methods</h4>
				<a name='inherited_methods'><!-- --></a>	
									<!-- =========== Summary =========== -->
					<p>Inherited From <span class="classname"><a href="../infModel/InfModel.html">InfModel</a></span></p>
					<blockquote>
													<span class="method-name"><a href="../infModel/InfModel.html#methodInfModel">InfModel::InfModel()</a></span><br>
													<span class="method-name"><a href="../infModel/InfModel.html#methodadd">InfModel::add()</a></span><br>
													<span class="method-name"><a href="../infModel/InfModel.html#methodfindRegex">InfModel::findRegex()</a></span><br>
													<span class="method-name"><a href="../infModel/InfModel.html#methodfindVocabulary">InfModel::findVocabulary()</a></span><br>
													<span class="method-name"><a href="../infModel/InfModel.html#methodgetSchema">InfModel::getSchema()</a></span><br>
													<span class="method-name"><a href="../infModel/InfModel.html#methodreplace">InfModel::replace()</a></span><br>
											</blockquote>
									<!-- =========== Summary =========== -->
					<p>Inherited From <span class="classname"><a href="../model/MemModel.html">MemModel</a></span></p>
					<blockquote>
													<span class="method-name"><a href="../model/MemModel.html#methodMemModel">MemModel::MemModel()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodadd">MemModel::add()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodaddModel">MemModel::addModel()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodaddNamespace">MemModel::addNamespace()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodaddParsedNamespaces">MemModel::addParsedNamespaces()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodaddWithoutDuplicates">MemModel::addWithoutDuplicates()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodclose">MemModel::close()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodcontains">MemModel::contains()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodcontainsAll">MemModel::containsAll()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodcontainsAny">MemModel::containsAny()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodequals">MemModel::equals()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfind">MemModel::find()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfindAsIterator">MemModel::findAsIterator()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfindCount">MemModel::findCount()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfindFirstMatchingStatement">MemModel::findFirstMatchingStatement()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfindRegex">MemModel::findRegex()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodfindVocabulary">MemModel::findVocabulary()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodgetIndexType">MemModel::getIndexType()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodgetParsedNamespaces">MemModel::getParsedNamespaces()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodgetStatementIterator">MemModel::getStatementIterator()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodindex">MemModel::index()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodintersect">MemModel::intersect()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodisEmpty">MemModel::isEmpty()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodisIndexed">MemModel::isIndexed()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methoditerFind">MemModel::iterFind()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodrdqlQuery">MemModel::rdqlQuery()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodrdqlQueryAsIterator">MemModel::rdqlQueryAsIterator()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodreify">MemModel::reify()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodremove">MemModel::remove()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodremoveNamespace">MemModel::removeNamespace()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodreplace">MemModel::replace()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodsaveAs">MemModel::saveAs()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodsetBaseURI">MemModel::setBaseURI()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodsize">MemModel::size()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodsubtract">MemModel::subtract()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodtoString">MemModel::toString()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodtoStringIncludingTriples">MemModel::toStringIncludingTriples()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodunite">MemModel::unite()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodwriteAsHtml">MemModel::writeAsHtml()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodwriteAsHtmlTable">MemModel::writeAsHtmlTable()</a></span><br>
													<span class="method-name"><a href="../model/MemModel.html#methodwriteRdfToString">MemModel::writeRdfToString()</a></span><br>
											</blockquote>
									<!-- =========== Summary =========== -->
					<p>Inherited From <span class="classname"><a href="../model/Model.html">Model</a></span></p>
					<blockquote>
													<span class="method-name"><a href="../model/Model.html#methodModel">Model::Model()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodfindForward">Model::findForward()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodgetBaseURI">Model::getBaseURI()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodgetMemModelByRDQL">Model::getMemModelByRDQL()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodgetOntModel">Model::getOntModel()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodgetResModel">Model::getResModel()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodload">Model::load()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodsparqlPrepare">Model::sparqlPrepare()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodsparqlQuery">Model::sparqlQuery()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#methodvisualize">Model::visualize()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#method_parseSparqlQuery">Model::_parseSparqlQuery()</a></span><br>
													<span class="method-name"><a href="../model/Model.html#method_prepareSparql">Model::_prepareSparql()</a></span><br>
											</blockquote>
									<!-- =========== Summary =========== -->
					<p>Inherited From <span class="classname"><a href="../utility/Object.html">Object</a></span></p>
					<blockquote>
													<span class="method-name"><a href="../utility/Object.html#methodtoString">Object::toString()</a></span><br>
											</blockquote>
										
		</div>
	</div>


	<p class="notes" id="credit">
		Documentation generated on Fri,  1 Jun 2007 16:49:31 +0200 by <a href="http://www.phpdoc.org" target="_blank">phpDocumentor 1.3.2</a>
	</p>
	</div></body>
</html>
