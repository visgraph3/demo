<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<!-- template designed by Marco Von Ballmoos -->
			<title></title>
			<link rel="stylesheet" href="media/stylesheet.css" />
			<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'/>
		</head>
		<body>
						
<a name="top"></a>
<h2>[model] element index</h2>
	<h3>Package indexes</h3>
	<ul>
				<li><a href="elementindex_.html"></a></li>
					<li><a href="elementindex_dataset.html">dataset</a></li>
					<li><a href="elementindex_infModel.html">infModel</a></li>
							<li><a href="elementindex_ontModel.html">ontModel</a></li>
					<li><a href="elementindex_rdql.html">rdql</a></li>
					<li><a href="elementindex_resModel.html">resModel</a></li>
					<li><a href="elementindex_sparql.html">sparql</a></li>
					<li><a href="elementindex_syntax.html">syntax</a></li>
					<li><a href="elementindex_utility.html">utility</a></li>
					<li><a href="elementindex_vocabulary.html">vocabulary</a></li>
			</ul>
<a href="elementindex.html">All elements</a>
<br />
<div class="index-letter-menu">
	<a class="index-letter" href="elementindex_model.html#a">a</a>
	<a class="index-letter" href="elementindex_model.html#b">b</a>
	<a class="index-letter" href="elementindex_model.html#c">c</a>
	<a class="index-letter" href="elementindex_model.html#d">d</a>
	<a class="index-letter" href="elementindex_model.html#e">e</a>
	<a class="index-letter" href="elementindex_model.html#f">f</a>
	<a class="index-letter" href="elementindex_model.html#g">g</a>
	<a class="index-letter" href="elementindex_model.html#h">h</a>
	<a class="index-letter" href="elementindex_model.html#i">i</a>
	<a class="index-letter" href="elementindex_model.html#l">l</a>
	<a class="index-letter" href="elementindex_model.html#m">m</a>
	<a class="index-letter" href="elementindex_model.html#n">n</a>
	<a class="index-letter" href="elementindex_model.html#o">o</a>
	<a class="index-letter" href="elementindex_model.html#p">p</a>
	<a class="index-letter" href="elementindex_model.html#q">q</a>
	<a class="index-letter" href="elementindex_model.html#r">r</a>
	<a class="index-letter" href="elementindex_model.html#s">s</a>
	<a class="index-letter" href="elementindex_model.html#t">t</a>
	<a class="index-letter" href="elementindex_model.html#u">u</a>
	<a class="index-letter" href="elementindex_model.html#v">v</a>
	<a class="index-letter" href="elementindex_model.html#w">w</a>
	<a class="index-letter" href="elementindex_model.html#_">_</a>
</div>

	<a name="_"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">_</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">_parseSparqlQuery</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#method_parseSparqlQuery">Model::_parseSparqlQuery()</a> in Model.php</div>
							<div class="index-item-description">Parses an query and returns the parsed form.</div>
					</dd>
			<dt class="field">
						<span class="method-title">_prepareSparql</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#method_prepareSparql">Model::_prepareSparql()</a> in Model.php</div>
							<div class="index-item-description">Prepares everything for SparqlEngine-usage    Loads the files, creates instances for SparqlEngine and    Dataset...</div>
					</dd>
		</dl>
	<a name="a"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">a</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">add</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodadd">MemModel::add()</a> in MemModel.php</div>
							<div class="index-item-description">Adds a new triple to the MemModel without checking if the statement is already in the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">add</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodadd">DbModel::add()</a> in DbModel.php</div>
							<div class="index-item-description">Add a new triple to this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodaddModel">MemModel::addModel()</a> in MemModel.php</div>
							<div class="index-item-description">Adds another model to this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodaddModel">DbModel::addModel()</a> in DbModel.php</div>
							<div class="index-item-description">Add the given model to this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addNamespace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodaddNamespace">MemModel::addNamespace()</a> in MemModel.php</div>
							<div class="index-item-description">Adds a namespace and prefix to the model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addNamespace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodaddNamespace">DbModel::addNamespace()</a> in DbModel.php</div>
							<div class="index-item-description">Adds a namespace and prefix to the model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addParsedNamespaces</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodaddParsedNamespaces">MemModel::addParsedNamespaces()</a> in MemModel.php</div>
							<div class="index-item-description">Adds the namespaces to the model. This method is called by  the parser. !!!! addParsedNamespaces() not overwrites manual  added namespaces in the model !!!!</div>
					</dd>
			<dt class="field">
						<span class="method-title">addParsedNamespaces</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodaddParsedNamespaces">DbModel::addParsedNamespaces()</a> in DbModel.php</div>
							<div class="index-item-description">Adds the namespaces to the model. This method is called by  the parser. !!!! addParsedNamespaces() not overwrites manual  added namespaces in the model !!!!</div>
					</dd>
			<dt class="field">
						<span class="method-title">addWithoutDuplicates</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodaddWithoutDuplicates">MemModel::addWithoutDuplicates()</a> in MemModel.php</div>
							<div class="index-item-description">Checks if a new statement is already in the MemModel and adds the statement, if it is not in the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">addWithoutDuplicates</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodaddWithoutDuplicates">DbModel::addWithoutDuplicates()</a> in DbModel.php</div>
							<div class="index-item-description">Alias for the method add().</div>
					</dd>
		</dl>
	<a name="b"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">b</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">BlankNode</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html#methodBlankNode">BlankNode::BlankNode()</a> in Blanknode.php</div>
							<div class="index-item-description">Constructor  You can supply a label or You supply a model and a unique ID is gernerated.</div>
					</dd>
			<dt class="field">
						BlankNode
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html">BlankNode</a> in Blanknode.php</div>
							<div class="index-item-description">An RDF blank node.</div>
					</dd>
			<dt class="field">
						<span class="include-title">Blanknode.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Blanknode.php.html">Blanknode.php</a> in Blanknode.php</div>
					</dd>
		</dl>
	<a name="c"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">c</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">close</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodclose">MemModel::close()</a> in MemModel.php</div>
							<div class="index-item-description">Close the MemModel and free up resources held.</div>
					</dd>
			<dt class="field">
						<span class="method-title">close</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodclose">DbModel::close()</a> in DbModel.php</div>
							<div class="index-item-description">Close this DbModel</div>
					</dd>
			<dt class="field">
						<span class="method-title">close</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodclose">DbStore::close()</a> in DbStore.php</div>
							<div class="index-item-description">Close the DbStore.</div>
					</dd>
			<dt class="field">
						<span class="method-title">compare</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodcompare">Statement::compare()</a> in Statement.php</div>
							<div class="index-item-description">Compares two statements and returns integer less than, equal to, or greater than zero.</div>
					</dd>
			<dt class="field">
						<span class="method-title">contains</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodcontains">MemModel::contains()</a> in MemModel.php</div>
							<div class="index-item-description">Tests if the MemModel contains the given triple.</div>
					</dd>
			<dt class="field">
						<span class="method-title">contains</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodcontains">DbModel::contains()</a> in DbModel.php</div>
							<div class="index-item-description">Check if the DbModel contains the given statement.</div>
					</dd>
			<dt class="field">
						<span class="method-title">containsAll</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodcontainsAll">MemModel::containsAll()</a> in MemModel.php</div>
							<div class="index-item-description">Determine if all of the statements in a model are also contained in this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">containsAll</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodcontainsAll">DbModel::containsAll()</a> in DbModel.php</div>
							<div class="index-item-description">Determine if all of the statements in the given model are also contained in this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">containsAny</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodcontainsAny">MemModel::containsAny()</a> in MemModel.php</div>
							<div class="index-item-description">Determine if any of the statements in a model are also contained in this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">containsAny</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodcontainsAny">DbModel::containsAny()</a> in DbModel.php</div>
							<div class="index-item-description">Determine if any of the statements in the given model are also contained in this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">createTables</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodcreateTables">DbStore::createTables()</a> in DbStore.php</div>
							<div class="index-item-description">Create tables and indexes for the given database type.</div>
					</dd>
		</dl>
	<a name="d"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">d</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">datasetExists</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methoddatasetExists">DbStore::datasetExists()</a> in DbStore.php</div>
							<div class="index-item-description">Check if the Dataset with the given $datasetName is already stored in the database</div>
					</dd>
			<dt class="field">
						<span class="method-title">DbModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodDbModel">DbModel::DbModel()</a> in DbModel.php</div>
							<div class="index-item-description">Constructor  Do not call this directly.</div>
					</dd>
			<dt class="field">
						DbModel
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html">DbModel</a> in DbModel.php</div>
							<div class="index-item-description">This class provides methods for manipulating DbModels from DbStore.</div>
					</dd>
			<dt class="field">
						<span class="method-title">DbStore</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodDbStore">DbStore::DbStore()</a> in DbStore.php</div>
							<div class="index-item-description">Constructor:  Set the database connection with the given parameters.</div>
					</dd>
			<dt class="field">
						DbStore
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html">DbStore</a> in DbStore.php</div>
							<div class="index-item-description">DbStore is a persistent store of RDF data using relational database technology.</div>
					</dd>
			<dt class="field">
						<span class="method-title">delete</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methoddelete">DbModel::delete()</a> in DbModel.php</div>
							<div class="index-item-description">Remove this DbModel from database and clean up.</div>
					</dd>
			<dt class="field">
						<span class="include-title">DbModel.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---DbModel.php.html">DbModel.php</a> in DbModel.php</div>
					</dd>
			<dt class="field">
						<span class="include-title">DbStore.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---DbStore.php.html">DbStore.php</a> in DbStore.php</div>
					</dd>
		</dl>
	<a name="e"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">e</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodequals">Resource::equals()</a> in Resource.php</div>
							<div class="index-item-description">Checks if the resource equals another resource.</div>
					</dd>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodequals">Statement::equals()</a> in Statement.php</div>
							<div class="index-item-description">Checks if two statements are equal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodequals">MemModel::equals()</a> in MemModel.php</div>
							<div class="index-item-description">Checks if two models are equal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodequals">Literal::equals()</a> in Literal.php</div>
							<div class="index-item-description">Checks if ihe literal equals another literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodequals">DbModel::equals()</a> in DbModel.php</div>
							<div class="index-item-description">Check if two models are equal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">equals</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html#methodequals">BlankNode::equals()</a> in Blanknode.php</div>
							<div class="index-item-description">Checks if two blank nodes are equal.</div>
					</dd>
		</dl>
	<a name="f"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">f</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">find</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodfind">DbModel::find()</a> in DbModel.php</div>
							<div class="index-item-description">General method to search for triples in the DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">find</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfind">MemModel::find()</a> in MemModel.php</div>
							<div class="index-item-description">General method to search for triples.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findAsIterator</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfindAsIterator">MemModel::findAsIterator()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a FindIterator for traversing the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findCount</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodfindCount">DbModel::findCount()</a> in DbModel.php</div>
							<div class="index-item-description">Search for triples and return the number of matches.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findCount</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfindCount">MemModel::findCount()</a> in MemModel.php</div>
							<div class="index-item-description">Searches for triples and returns the number of matches.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findFirstMatchingStatement</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodfindFirstMatchingStatement">DbModel::findFirstMatchingStatement()</a> in DbModel.php</div>
							<div class="index-item-description">Search for triples and return the first matching statement.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findFirstMatchingStatement</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfindFirstMatchingStatement">MemModel::findFirstMatchingStatement()</a> in MemModel.php</div>
							<div class="index-item-description">Searches for triples and returns the first matching statement.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findForward</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodfindForward">Model::findForward()</a> in Model.php</div>
							<div class="index-item-description">Searches for triples using find() and tracks forward blank nodes  until the final objects in the retrieved subgraphs are all named resources.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findRegex</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodfindRegex">DbModel::findRegex()</a> in DbModel.php</div>
							<div class="index-item-description">Method to search for triples using Perl-style regular expressions.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findRegex</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfindRegex">MemModel::findRegex()</a> in MemModel.php</div>
							<div class="index-item-description">Method to search for triples using Perl-style regular expressions.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findVocabulary</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodfindVocabulary">DbModel::findVocabulary()</a> in DbModel.php</div>
							<div class="index-item-description">Return all tripels of a certain vocabulary.</div>
					</dd>
			<dt class="field">
						<span class="method-title">findVocabulary</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodfindVocabulary">MemModel::findVocabulary()</a> in MemModel.php</div>
							<div class="index-item-description">Returns all tripels of a certain vocabulary.</div>
					</dd>
		</dl>
	<a name="g"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">g</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">getBaseURI</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodgetBaseURI">Model::getBaseURI()</a> in Model.php</div>
							<div class="index-item-description">Return current baseURI.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDatasetDb</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetDatasetDb">DbStore::getDatasetDb()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of DatasetDb with the given $datasetName and  load the corresponding values from the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDatasetMem</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetDatasetMem">ModelFactory::getDatasetMem()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a NamedGraphSetMem.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDatatype</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodgetDatatype">Literal::getDatatype()</a> in Literal.php</div>
							<div class="index-item-description">Returns the datatype of the literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDbConn</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodgetDbConn">DbModel::getDbConn()</a> in DbModel.php</div>
							<div class="index-item-description">Returns the database connection object</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDbModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetDbModel">ModelFactory::getDbModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a new DbModel using the database connection  supplied by $dbStore.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDbStore</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetDbStore">ModelFactory::getDbStore()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a database connection with the given parameters.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDefaultDbModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetDefaultDbModel">ModelFactory::getDefaultDbModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a DbModel with the database connection  defined in constants.php.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getDefaultModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetDefaultModel">ModelFactory::getDefaultModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getID</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html#methodgetID">BlankNode::getID()</a> in Blanknode.php</div>
							<div class="index-item-description">Returns the ID of the blank node.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getIndexType</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodgetIndexType">MemModel::getIndexType()</a> in MemModel.php</div>
							<div class="index-item-description">Returns the indextype:  -1 if there is no index, 0 if there are indices over S,P,O(separate), <ol><li>if there is an index over SPO, 2 if there is an index over SP and 3 if</li></ol> there is an index over SO.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getInfModelB</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetInfModelB">ModelFactory::getInfModelB()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a InfModelB.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getInfModelF</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetInfModelF">ModelFactory::getInfModelF()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a InfModelF.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html#methodgetLabel">BlankNode::getLabel()</a> in Blanknode.php</div>
							<div class="index-item-description">Returns the ID of the blank node.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodgetLabel">Literal::getLabel()</a> in Literal.php</div>
							<div class="index-item-description">Returns the string value of the literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodgetLabel">Resource::getLabel()</a> in Resource.php</div>
							<div class="index-item-description">Returns the label of the resource, which is the URI of the resource.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabelObject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetLabelObject">Statement::getLabelObject()</a> in Statement.php</div>
							<div class="index-item-description">Reurns the URI, text or bNode identifier of the statements's object.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabelPredicate</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetLabelPredicate">Statement::getLabelPredicate()</a> in Statement.php</div>
							<div class="index-item-description">Returns the URI of the statements's predicate.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLabelSubject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetLabelSubject">Statement::getLabelSubject()</a> in Statement.php</div>
							<div class="index-item-description">Returns the URI or bNode identifier of the statements's subject.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLanguage</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodgetLanguage">Literal::getLanguage()</a> in Literal.php</div>
							<div class="index-item-description">Returns the language of the literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getLocalName</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodgetLocalName">Resource::getLocalName()</a> in Resource.php</div>
							<div class="index-item-description">Returns the local name of the resource.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getMemModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetMemModel">ModelFactory::getMemModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getMemModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodgetMemModel">DbModel::getMemModel()</a> in DbModel.php</div>
							<div class="index-item-description">Create a MemModel containing all the triples of the current DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getMemModelByRDQL</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodgetMemModelByRDQL">Model::getMemModelByRDQL()</a> in Model.php</div>
							<div class="index-item-description">Perform an RDQL query on this Model. Should work with all types of models.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetModel">DbStore::getModel()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of DbModel with the given $modelURI and  load the corresponding values of modelID and baseURI from the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getModelID</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodgetModelID">DbModel::getModelID()</a> in DbModel.php</div>
							<div class="index-item-description">Returns the model id</div>
					</dd>
			<dt class="field">
						<span class="method-title">getNamedGraphDb</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetNamedGraphDb">DbStore::getNamedGraphDb()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of namedGraphDb with the given $modelURI and graphName and  load the corresponding values of modelID and baseURI from the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getNamespace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodgetNamespace">Resource::getNamespace()</a> in Resource.php</div>
							<div class="index-item-description">Returns the namespace of the resource. May return null.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getNewDatasetDb</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetNewDatasetDb">DbStore::getNewDatasetDb()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of DatasetDb with the given $datasetName  and insert the DatasetDb variables into the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getNewModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetNewModel">DbStore::getNewModel()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of DbModel with the given $modelURI  and insert the DbModel variables into the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getNewNamedGraphDb</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodgetNewNamedGraphDb">DbStore::getNewNamedGraphDb()</a> in DbStore.php</div>
							<div class="index-item-description">Create a new instance of namedGraphDb with the given $modelURI and graphName  and insert the DbModel variables into the database (not the graphName. This  is only stored persistently, when added to dataset).</div>
					</dd>
			<dt class="field">
						<span class="method-title">getObject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetObject">Statement::getObject()</a> in Statement.php</div>
							<div class="index-item-description">Returns the object of the triple.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getOntModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodgetOntModel">Model::getOntModel()</a> in Model.php</div>
							<div class="index-item-description">Returns an OntModel with this model as baseModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getOntModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetOntModel">ModelFactory::getOntModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns an OntModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getOntModelForBaseModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetOntModelForBaseModel">ModelFactory::getOntModelForBaseModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Creates an OntModel that wraps an existing base model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getParsedNamespaces</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodgetParsedNamespaces">MemModel::getParsedNamespaces()</a> in MemModel.php</div>
							<div class="index-item-description">Returns the models namespaces.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getParsedNamespaces</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodgetParsedNamespaces">DbModel::getParsedNamespaces()</a> in DbModel.php</div>
							<div class="index-item-description">Returns the models namespaces.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getPredicate</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetPredicate">Statement::getPredicate()</a> in Statement.php</div>
							<div class="index-item-description">Returns the predicate of the triple.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getResModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodgetResModel">Model::getResModel()</a> in Model.php</div>
							<div class="index-item-description">Returns a ResModel with this model as baseModel. This is the same as  ModelFactory::getResModelForBaseModel($this).</div>
					</dd>
			<dt class="field">
						<span class="method-title">getResModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetResModel">ModelFactory::getResModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Returns a ResModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getResModelForBaseModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetResModelForBaseModel">ModelFactory::getResModelForBaseModel()</a> in ModelFactory.php</div>
							<div class="index-item-description">Creates a ResModel that wraps an existing base model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getSparqlClient</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html#methodgetSparqlClient">ModelFactory::getSparqlClient()</a> in ModelFactory.php</div>
							<div class="index-item-description">Creates a SparqlClient.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getStatementIterator</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodgetStatementIterator">MemModel::getStatementIterator()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a StatementIterator for traversing the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getSubject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodgetSubject">Statement::getSubject()</a> in Statement.php</div>
							<div class="index-item-description">Returns the subject of the triple.</div>
					</dd>
			<dt class="field">
						<span class="method-title">getURI</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodgetURI">Resource::getURI()</a> in Resource.php</div>
							<div class="index-item-description">Returns the URI of the resource.</div>
					</dd>
		</dl>
	<a name="h"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">h</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">hashCode</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodhashCode">Statement::hashCode()</a> in Statement.php</div>
							<div class="index-item-description">Retruns the hash code of the triple.</div>
					</dd>
		</dl>
	<a name="i"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">i</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">index</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodindex">MemModel::index()</a> in MemModel.php</div>
							<div class="index-item-description">Builds a search index for the statements in the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">intersect</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodintersect">MemModel::intersect()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a new MemModel containing all the statements which are in both this MemModel and another.</div>
					</dd>
			<dt class="field">
						<span class="method-title">intersect</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodintersect">DbModel::intersect()</a> in DbModel.php</div>
							<div class="index-item-description">Return a new MemModel containing all the statements which are in both  this model and the given model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">isEmpty</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodisEmpty">MemModel::isEmpty()</a> in MemModel.php</div>
							<div class="index-item-description">Checks if MemModel is empty</div>
					</dd>
			<dt class="field">
						<span class="method-title">isEmpty</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodisEmpty">DbModel::isEmpty()</a> in DbModel.php</div>
							<div class="index-item-description">Check if this DbModel is empty.</div>
					</dd>
			<dt class="field">
						<span class="method-title">isIndexed</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodisIndexed">MemModel::isIndexed()</a> in MemModel.php</div>
							<div class="index-item-description">Returns 	true if there is an index, false if not.</div>
					</dd>
			<dt class="field">
						<span class="method-title">isSetup</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodisSetup">DbStore::isSetup()</a> in DbStore.php</div>
							<div class="index-item-description">Checks if tables are setup for RAP</div>
					</dd>
			<dt class="field">
						<span class="method-title">iterFind</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methoditerFind">MemModel::iterFind()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a FindIterator for traversing the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">iterFind</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methoditerFind">DbModel::iterFind()</a> in DbModel.php</div>
							<div class="index-item-description">Returns a FindIterator for traversing the MemModel.</div>
					</dd>
		</dl>
	<a name="l"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">l</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">listModels</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodlistModels">DbStore::listModels()</a> in DbStore.php</div>
							<div class="index-item-description">List all DbModels stored in the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">Literal</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodLiteral">Literal::Literal()</a> in Literal.php</div>
							<div class="index-item-description">Constructor</div>
					</dd>
			<dt class="field">
						Literal
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html">Literal</a> in Literal.php</div>
							<div class="index-item-description">An RDF literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">load</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodload">Model::load()</a> in Model.php</div>
							<div class="index-item-description">Load a model from a file containing RDF, N3, N-Triples or a xhtml document containing RDF.</div>
					</dd>
			<dt class="field">
						<span class="include-title">Literal.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Literal.php.html">Literal.php</a> in Literal.php</div>
					</dd>
		</dl>
	<a name="m"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">m</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">MemModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodMemModel">MemModel::MemModel()</a> in MemModel.php</div>
							<div class="index-item-description">Constructor  You can supply a base_uri</div>
					</dd>
			<dt class="field">
						MemModel
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html">MemModel</a> in MemModel.php</div>
							<div class="index-item-description">A MemModel is an RDF Model, which is stored in the main memory.</div>
					</dd>
			<dt class="field">
						Model
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html">Model</a> in Model.php</div>
							<div class="index-item-description">Abstract superclass of MemModel and DbModel. A model is a programming interface to an RDF graph.</div>
					</dd>
			<dt class="field">
						<span class="method-title">Model</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodModel">Model::Model()</a> in Model.php</div>
							<div class="index-item-description">Notice for people who are used to work with older versions of RAP.</div>
					</dd>
			<dt class="field">
						<span class="include-title">MemModel.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---MemModel.php.html">MemModel.php</a> in MemModel.php</div>
					</dd>
			<dt class="field">
						<span class="include-title">Model.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Model.php.html">Model.php</a> in Model.php</div>
					</dd>
			<dt class="field">
						<span class="include-title">ModelFactory.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---ModelFactory.php.html">ModelFactory.php</a> in ModelFactory.php</div>
					</dd>
			<dt class="field">
						<span class="method-title">modelExists</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodmodelExists">DbStore::modelExists()</a> in DbStore.php</div>
							<div class="index-item-description">Check if the DbModel with the given modelURI is already stored in the database</div>
					</dd>
			<dt class="field">
						ModelFactory
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/ModelFactory.html">ModelFactory</a> in ModelFactory.php</div>
							<div class="index-item-description">ModelFactory is a static class which provides methods for creating different  types of RAP models. RAP models have to be created trough a ModelFactory  instead of creating them directly with the 'new' operator because of RAP's  dynamic code inclusion mechanism.</div>
					</dd>
		</dl>
	<a name="n"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">n</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="include-title">Node.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Node.php.html">Node.php</a> in Node.php</div>
					</dd>
			<dt class="field">
						Node
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Node.html">Node</a> in Node.php</div>
							<div class="index-item-description">An abstract RDF node.</div>
					</dd>
		</dl>
	<a name="o"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">o</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">object</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodobject">Statement::object()</a> in Statement.php</div>
							<div class="index-item-description">Alias for getObject()</div>
					</dd>
		</dl>
	<a name="p"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">p</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">predicate</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodpredicate">Statement::predicate()</a> in Statement.php</div>
							<div class="index-item-description">Alias for getPredicate()</div>
					</dd>
			<dt class="field">
						<span class="method-title">putModel</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodputModel">DbStore::putModel()</a> in DbStore.php</div>
							<div class="index-item-description">Store a MemModel or another DbModel from a different DbStore in the database.</div>
					</dd>
		</dl>
	<a name="q"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">q</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="var-title">$queryParser</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#var$queryParser">Model::$queryParser</a> in Model.php</div>
							<div class="index-item-description">SparqlParser so we can re-use it</div>
					</dd>
		</dl>
	<a name="r"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">r</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="include-title">Resource.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Resource.php.html">Resource.php</a> in Resource.php</div>
					</dd>
			<dt class="field">
						<span class="method-title">rdqlQuery</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodrdqlQuery">MemModel::rdqlQuery()</a> in MemModel.php</div>
							<div class="index-item-description">Perform an RDQL query on this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">rdqlQuery</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodrdqlQuery">DbModel::rdqlQuery()</a> in DbModel.php</div>
							<div class="index-item-description">Perform an RDQL query on this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">rdqlQueryAsIterator</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodrdqlQueryAsIterator">DbModel::rdqlQueryAsIterator()</a> in DbModel.php</div>
							<div class="index-item-description">Perform an RDQL query on this DBModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">rdqlQueryAsIterator</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodrdqlQueryAsIterator">MemModel::rdqlQueryAsIterator()</a> in MemModel.php</div>
							<div class="index-item-description">Perform an RDQL query on this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">reify</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodreify">Statement::reify()</a> in Statement.php</div>
							<div class="index-item-description">Reifies a statement.</div>
					</dd>
			<dt class="field">
						<span class="method-title">reify</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodreify">DbModel::reify()</a> in DbModel.php</div>
							<div class="index-item-description">Reify the DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">reify</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodreify">MemModel::reify()</a> in MemModel.php</div>
							<div class="index-item-description">Reifies the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">remove</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodremove">DbModel::remove()</a> in DbModel.php</div>
							<div class="index-item-description">Remove the given triple from this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">remove</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodremove">MemModel::remove()</a> in MemModel.php</div>
							<div class="index-item-description">Removes the triple from the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">removeNamedGraphDb</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbStore.html#methodremoveNamedGraphDb">DbStore::removeNamedGraphDb()</a> in DbStore.php</div>
							<div class="index-item-description">Removes the graph with all statements from the database.</div>
					</dd>
			<dt class="field">
						<span class="method-title">removeNamespace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodremoveNamespace">DbModel::removeNamespace()</a> in DbModel.php</div>
							<div class="index-item-description">removes a single namespace from the model</div>
					</dd>
			<dt class="field">
						<span class="method-title">removeNamespace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodremoveNamespace">MemModel::removeNamespace()</a> in MemModel.php</div>
							<div class="index-item-description">removes a single namespace from the model</div>
					</dd>
			<dt class="field">
						<span class="method-title">replace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodreplace">MemModel::replace()</a> in MemModel.php</div>
							<div class="index-item-description">General method to replace nodes of a MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">replace</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodreplace">DbModel::replace()</a> in DbModel.php</div>
							<div class="index-item-description">General method to replace nodes of a DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">Resource</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodResource">Resource::Resource()</a> in Resource.php</div>
							<div class="index-item-description">Constructor  Takes an URI or a namespace/localname combination</div>
					</dd>
			<dt class="field">
						Resource
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html">Resource</a> in Resource.php</div>
							<div class="index-item-description">An RDF resource.</div>
					</dd>
		</dl>
	<a name="s"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">s</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="include-title">Statement.php</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/_model---Statement.php.html">Statement.php</a> in Statement.php</div>
					</dd>
			<dt class="field">
						<span class="method-title">saveAs</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodsaveAs">DbModel::saveAs()</a> in DbModel.php</div>
							<div class="index-item-description">Saves the RDF,N3 or N-Triple serialization of the DbModel to a file.</div>
					</dd>
			<dt class="field">
						<span class="method-title">saveAs</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodsaveAs">MemModel::saveAs()</a> in MemModel.php</div>
							<div class="index-item-description">Saves the RDF,N3 or N-Triple serialization of the MemModel to a file.</div>
					</dd>
			<dt class="field">
						<span class="method-title">setBaseURI</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodsetBaseURI">MemModel::setBaseURI()</a> in MemModel.php</div>
							<div class="index-item-description">Set a base URI for the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">setBaseURI</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodsetBaseURI">DbModel::setBaseURI()</a> in DbModel.php</div>
							<div class="index-item-description">Set a base URI for the DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">setDatatype</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodsetDatatype">Literal::setDatatype()</a> in Literal.php</div>
							<div class="index-item-description">Sets the datatype of the literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">setLanguage</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodsetLanguage">Literal::setLanguage()</a> in Literal.php</div>
							<div class="index-item-description">Sets the language of the literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">size</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodsize">MemModel::size()</a> in MemModel.php</div>
							<div class="index-item-description">Number of triples in the MemModel</div>
					</dd>
			<dt class="field">
						<span class="method-title">size</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodsize">DbModel::size()</a> in DbModel.php</div>
							<div class="index-item-description">Return the number of statements in this DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">sparqlPrepare</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodsparqlPrepare">Model::sparqlPrepare()</a> in Model.php</div>
							<div class="index-item-description">Prepares a sparql query and returns a prepared statement    that can be executed with data later on.</div>
					</dd>
			<dt class="field">
						<span class="method-title">sparqlQuery</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodsparqlQuery">Model::sparqlQuery()</a> in Model.php</div>
							<div class="index-item-description">Performs a SPARQL query against a model. The model is converted to  an RDF Dataset. The result can be retrived in SPARQL Query Results XML Format or  as an array containing the variables an their bindings.</div>
					</dd>
			<dt class="field">
						<span class="method-title">Statement</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodStatement">Statement::Statement()</a> in Statement.php</div>
							<div class="index-item-description">The parameters to constructor are instances of classes and not just strings</div>
					</dd>
			<dt class="field">
						Statement
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html">Statement</a> in Statement.php</div>
							<div class="index-item-description">An RDF statement.</div>
					</dd>
			<dt class="field">
						<span class="method-title">subject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodsubject">Statement::subject()</a> in Statement.php</div>
							<div class="index-item-description">Alias for getSubject()</div>
					</dd>
			<dt class="field">
						<span class="method-title">subtract</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodsubtract">MemModel::subtract()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a new MemModel that is the subtraction of another model from this MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">subtract</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodsubtract">DbModel::subtract()</a> in DbModel.php</div>
							<div class="index-item-description">Return a new MemModel that is the subtraction of another model from this DbModel.</div>
					</dd>
		</dl>
	<a name="t"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">t</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodtoString">MemModel::toString()</a> in MemModel.php</div>
							<div class="index-item-description">Short Dump of the MemModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/BlankNode.html#methodtoString">BlankNode::toString()</a> in Blanknode.php</div>
							<div class="index-item-description">Dumps bNode.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Literal.html#methodtoString">Literal::toString()</a> in Literal.php</div>
							<div class="index-item-description">Dumps literal.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodtoString">Statement::toString()</a> in Statement.php</div>
							<div class="index-item-description">Dumps the triple.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodtoString">DbModel::toString()</a> in DbModel.php</div>
							<div class="index-item-description">Short dump of the DbModel.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Resource.html#methodtoString">Resource::toString()</a> in Resource.php</div>
							<div class="index-item-description">Dumps resource.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toStringIncludingTriples</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodtoStringIncludingTriples">MemModel::toStringIncludingTriples()</a> in MemModel.php</div>
							<div class="index-item-description">Dumps of the MemModel including all triples.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toStringIncludingTriples</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodtoStringIncludingTriples">DbModel::toStringIncludingTriples()</a> in DbModel.php</div>
							<div class="index-item-description">Dump of the DbModel including all triples.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toStringObject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodtoStringObject">Statement::toStringObject()</a> in Statement.php</div>
							<div class="index-item-description">Reurns a toString() serialization of the statements's object.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toStringPredicate</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodtoStringPredicate">Statement::toStringPredicate()</a> in Statement.php</div>
							<div class="index-item-description">Returns a toString() serialization of the statements's predicate.</div>
					</dd>
			<dt class="field">
						<span class="method-title">toStringSubject</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Statement.html#methodtoStringSubject">Statement::toStringSubject()</a> in Statement.php</div>
							<div class="index-item-description">Returns a toString() serialization of the statements's subject.</div>
					</dd>
		</dl>
	<a name="u"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">u</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">unite</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodunite">MemModel::unite()</a> in MemModel.php</div>
							<div class="index-item-description">Returns a new MemModel that is the set-union of the MemModel with another model.</div>
					</dd>
			<dt class="field">
						<span class="method-title">unite</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodunite">DbModel::unite()</a> in DbModel.php</div>
							<div class="index-item-description">Return a new MemModel that is the set-union the model with another model.</div>
					</dd>
		</dl>
	<a name="v"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">v</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">visualize</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/Model.html#methodvisualize">Model::visualize()</a> in Model.php</div>
							<div class="index-item-description">Alias for RDFUtil::visualiseGraph(&amp;$model, $format, $short_prefix)</div>
					</dd>
		</dl>
	<a name="w"></a>
	<div class="index-letter-section">
		<div style="float: left" class="index-letter-title">w</div>
		<div style="float: right"><a href="#top">top</a></div>
		<div style="clear: both"></div>
	</div>
	<dl>
			<dt class="field">
						<span class="method-title">writeAsHtml</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodwriteAsHtml">MemModel::writeAsHtml()</a> in MemModel.php</div>
							<div class="index-item-description">Writes the RDF serialization of the MemModel as HTML.</div>
					</dd>
			<dt class="field">
						<span class="method-title">writeAsHtml</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodwriteAsHtml">DbModel::writeAsHtml()</a> in DbModel.php</div>
							<div class="index-item-description">Write the RDF serialization of the _DbModel as HTML.</div>
					</dd>
			<dt class="field">
						<span class="method-title">writeAsHtmlTable</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodwriteAsHtmlTable">MemModel::writeAsHtmlTable()</a> in MemModel.php</div>
							<div class="index-item-description">Writes the RDF serialization of the MemModel as HTML table.</div>
					</dd>
			<dt class="field">
						<span class="method-title">writeAsHtmlTable</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodwriteAsHtmlTable">DbModel::writeAsHtmlTable()</a> in DbModel.php</div>
							<div class="index-item-description">Write the RDF serialization of the DbModel as HTML table.</div>
					</dd>
			<dt class="field">
						<span class="method-title">writeRdfToString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/MemModel.html#methodwriteRdfToString">MemModel::writeRdfToString()</a> in MemModel.php</div>
							<div class="index-item-description">Writes the RDF serialization of the MemModel as HTML table.</div>
					</dd>
			<dt class="field">
						<span class="method-title">writeRdfToString</span>
					</dt>
		<dd class="index-item-body">
			<div class="index-item-details"><a href="model/DbModel.html#methodwriteRdfToString">DbModel::writeRdfToString()</a> in DbModel.php</div>
							<div class="index-item-description">Write the RDF serialization of the DbModel to string.</div>
					</dd>
		</dl>

<div class="index-letter-menu">
	<a class="index-letter" href="elementindex_model.html#a">a</a>
	<a class="index-letter" href="elementindex_model.html#b">b</a>
	<a class="index-letter" href="elementindex_model.html#c">c</a>
	<a class="index-letter" href="elementindex_model.html#d">d</a>
	<a class="index-letter" href="elementindex_model.html#e">e</a>
	<a class="index-letter" href="elementindex_model.html#f">f</a>
	<a class="index-letter" href="elementindex_model.html#g">g</a>
	<a class="index-letter" href="elementindex_model.html#h">h</a>
	<a class="index-letter" href="elementindex_model.html#i">i</a>
	<a class="index-letter" href="elementindex_model.html#l">l</a>
	<a class="index-letter" href="elementindex_model.html#m">m</a>
	<a class="index-letter" href="elementindex_model.html#n">n</a>
	<a class="index-letter" href="elementindex_model.html#o">o</a>
	<a class="index-letter" href="elementindex_model.html#p">p</a>
	<a class="index-letter" href="elementindex_model.html#q">q</a>
	<a class="index-letter" href="elementindex_model.html#r">r</a>
	<a class="index-letter" href="elementindex_model.html#s">s</a>
	<a class="index-letter" href="elementindex_model.html#t">t</a>
	<a class="index-letter" href="elementindex_model.html#u">u</a>
	<a class="index-letter" href="elementindex_model.html#v">v</a>
	<a class="index-letter" href="elementindex_model.html#w">w</a>
	<a class="index-letter" href="elementindex_model.html#_">_</a>
</div>
	</body>
</html>
