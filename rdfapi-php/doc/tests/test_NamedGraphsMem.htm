<link href="phpdoc.CSS" rel="stylesheet" type="text/css">
<style type="text/css">
<!--
.Stil1 {	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: smaller;
}
.Stil2 {font-family: Verdana, Arial, Helvetica, sans-serif}
-->
</style>
<H3>RDF API for PHP V0.9.3</H3>
<h1>Test: Using the Dataset API </h1>
<br>
This example is part of the <a href="../tests.html">RAP - Rdf API for PHP</a> documentation.
<p>Working with NamedGraphSets: </p>
<table width="100%" border="1" cellpadding="3" cellspacing="0">
  <tbody>
    <tr valign="top">
      <td bgcolor="#e7e7ef">
        <p>&lt;?php <br>
          // Include RAP <br>
          define(&quot;RDFAPI_INCLUDE_DIR&quot;, &quot;./../../api/&quot;); <br>
        include(RDFAPI_INCLUDE_DIR . &quot;RdfAPI.php&quot;); </p>
        <p>//get a GraphSet from the ModelFactory <br>
          $graphset = ModelFactory::getDatasetMem('Dataset1'); </p>
        <p>// Create a new NamedGraphsMem <br>
          $graph1 = new NamedGraphMem('http://graph1'); <br>
          $graph2 =&amp; $graphset-&gt;createGraph('http://graph2'); </p>
        <p>//create Quads <br>
          $quad1= new Quad(new Resource('http://graph3'),new Resource('http://subject1'),new Resource('http://predicate1'),new Resource('http://object1')); <br>
          $quad2= new Quad(new Resource('http://graph3'),new Resource('http://subject2'),new Resource('http://predicate2'),new Resource('http://object2')); <br>
          $quad3= new Quad(new Resource('http://graph4'),new Resource('http://subject3'),new Resource('http://predicate3'),new Resource('http://object3')); <br>
          $quad5= new Quad(new Resource('http://graph4'),new Resource('http://subject5'),new Resource('http://predicate5'),new Resource('http://object5')); </p>
        <p>//add Quads to the GraphSet. Thee needed NamedGraphs will be created automatically <br>
          $graphset-&gt;addQuad($quad1); <br>
          $graphset-&gt;addQuad($quad3); <br>
          $graphset-&gt;addQuad($quad2); </p>
        <p>//add a NamedGraph to the Set <br>
          $graphset-&gt;addNamedGraph($graph1); </p>
        <p>//Is the Graph &quot;http://graph1&quot; part of the GraphSet? <br>
          echo '&lt;b&gt;Is the Graph &quot;http://graph1&quot; part of the GraphSet?&lt;/b&gt;&lt;BR&gt;'; <br>
          var_dump($graphset-&gt;containsNamedGraph('http://graph1')); <br>
          echo'&lt;p/&gt;'; </p>
        <p>//remove 'http://graph2' from the set <br>
          $graphset-&gt;removeNamedGraph('http://graph2'); </p>
        <p>//Is the Graph &quot;http://graph2&quot; part of the GraphSet? <br>
          echo '&lt;b&gt;Is the Graph &quot;http://graph2&quot; part of the GraphSet?&lt;/b&gt;&lt;BR&gt;'; <br>
          var_dump($graphset-&gt;containsNamedGraph('http://graph2')); <br>
          echo'&lt;p/&gt;'; </p>
        <p>//creat basic statement <br>
          $statement=new Statement(new Resource('http://subject4'),new Resource('http://predicate4'),new Resource('http://object4')); </p>
        <p>//get a Graph from the Set and add a basic statement <br>
          $graph4=&amp;$graphset-&gt;getNamedGraph('http://graph4'); <br>
          $graph4-&gt;add($statement); </p>
        <p>//remove Quad5 <br>
          $graphset-&gt;removeQuad($quad5); </p>
        <p>//get an iterator over all Quads <br>
          echo '&lt;p/&gt;&lt;b&gt;All Quads:&lt;/b&gt;&lt;BR&gt;'; <br>
          for($iterator = $graphset-&gt;findInNamedGraphs(null,null,null,null); $iterator-&gt;valid(); $iterator-&gt;next()) <br>
          { <br>
          &nbsp;&nbsp;$quad=$iterator-&gt;current(); <br>
          &nbsp;&nbsp;echo $quad-&gt;toString().'&lt;BR&gt;'; <br>
          }; </p>
        <p>//get an iterator over all Quads in 'http://graph3' <br>
          echo '&lt;p/&gt;&lt;b&gt;All Quads in http://graph3:&lt;/b&gt;&lt;BR&gt;'; <br>
          for($iterator = $graphset-&gt;findInNamedGraphs(new resource('http://graph3'),null,null,null); $iterator-&gt;valid(); $iterator-&gt;next()) <br>
          { <br>
          &nbsp;&nbsp;$quad=$iterator-&gt;current(); <br>
          &nbsp;&nbsp;echo $quad-&gt;toString().'&lt;BR&gt;'; <br>
          }; </p>
        <p>//how many Quads are in the whole GraphSet <br>
          echo '&lt;p/&gt;&lt;b&gt;How many Quads are in the whole GraphSet?&lt;/b&gt;&lt;BR&gt;'; <br>
          echo $graphset-&gt;countQuads(); </p>
        <p>//does the GraphSet contain the Quad (http://graph4, http://subject4, http://predicate4, http://object4) ? <br>
          echo '&lt;p/&gt;&lt;b&gt;Does the GraphSet contain the Quad (http://graph4, http://subject4, http://predicate4, http://object4) ?&lt;/b&gt;&lt;BR&gt;'; <br>
          var_dump($graphset-&gt;containsQuad(new Resource('http://graph4'),new Resource('http://subject4'),new Resource('http://predicate4'),new Resource('http://object4'))); <br>
      ?&gt; </p></td>
    </tr>
  </tbody>
</table>
<p>Output:</p>
<p> <strong>Is the Graph "http://graph1" part of the GraphSet? </strong><br>
bool(true) </p>
<p><strong>Is the Graph "http://graph2" part of the GraphSet? </strong><br>
bool(false)
<p><strong>All Quads: </strong><br>
  GraphName(http://graph3) Triple(Resource("http://subject1"), Resource("http://predicate1"), Resource("http://object1")) <br>
  GraphName(http://graph3) Triple(Resource("http://subject2"), Resource("http://predicate2"), Resource("http://object2")) <br>
  GraphName(http://graph4) Triple(Resource("http://subject3"), Resource("http://predicate3"), Resource("http://object3")) <br>
GraphName(http://graph4) Triple(Resource("http://subject4"), Resource("http://predicate4"), Resource("http://object4")) 
<p><strong>All Quads in http://graph3: </strong><br>
  GraphName(http://graph3) Triple(Resource("http://subject1"), Resource("http://predicate1"), Resource("http://object1")) <br>
GraphName(http://graph3) Triple(Resource("http://subject2"), Resource("http://predicate2"), Resource("http://object2")) 
<p><strong>How many Quads are in the whole GraphSet? </strong><br>
  4
<p><strong>Does the GraphSet contain the Quad (http://graph4, http://subject4, http://predicate4, http://object4) ? </strong><br>
  bool(true) </p>
